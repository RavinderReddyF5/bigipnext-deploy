variables:
  MBIQ_CI_DOCKER_DIR: "artifactory.f5net.com/f5-bigiq-docker/mbiq-tools"
  MBIQ_CI_DOCKER_TERRAFORM: "${MBIQ_CI_DOCKER_DIR}/terraform-runner:4.1.1"
  MBIQ_CI_TERRATEST_VERSION: "0.38.8"

default:
  image: "${MBIQ_CI_DOCKER_TERRAFORM}"
  retry:
    max: 1
    when:
      - stuck_or_timeout_failure
      - runner_system_failure

workflow:
  rules:
    # For merge requests, create a pipeline
    - if: '$CI_MERGE_REQUEST_IID'
    # For `master` branch, create a pipeline
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    # For web ui, create a pipeline
    - if: '$CI_PIPELINE_SOURCE == "web"'
    # For tags, don't create a pipeline
    - if: '$CI_COMMIT_TAG'
      when: never

stages:
  - static-analysis
  - test
  - pre-release
  - release

go-lint:
  stage: static-analysis
  script:
    - make lint

test:
  stage: test
  variables:
    MBIQ_CI_TEST_OUTPUT_DIR: ${CI_PROJECT_DIR}/logs
    MBIQ_CI_TEST_OUTPUT_FILE: ${CI_PROJECT_DIR}/logs/test_output.log
    OUTPUT_LOG_FILE: ${MBIQ_CI_TEST_OUTPUT_DIR}/${MBIQ_CI_TEST_OUTPUT_FILE}
  before_script:
    - wget -nv -O /usr/local/bin/terratest_log_parser https://sea.artifactory.f5net.com/artifactory/generic-github-remote/gruntwork-io/terratest/releases/download/v${MBIQ_CI_TERRATEST_VERSION}/terratest_log_parser_linux_amd64
    - chmod +x /usr/local/bin/terratest_log_parser
  script:
    - export TF_VAR_auth_url="https://vio-sea.pdsea.f5net.com:5000/v3"
    - export TF_VAR_username="${MBIQ_DEMO_VIO_ACCT_USR}"
    - export TF_VAR_password="${MBIQ_DEMO_VIO_ACCT_PWD}"
    - export TF_VAR_tenant_name="verizon-dcd"
    - export TF_VAR_mbip_flavor_name="m1.large"
    - export TF_VAR_admin_network_name="AdminNetwork2"
    - export TF_VAR_network_port_names="[\"mgmt-2\"]"
    - export TF_VAR_network_port_ips="10.145.64.156"
    - export TF_VAR_internal_network_name="BIG-IP Next Internal Network"
    - export TF_VAR_internal_network_subnet_name="internal-subnet"
    - export TF_VAR_internal_ip_addresses="[\"10.1.255.1\"]"
    - export TF_VAR_external_network_name="BIG-IP Next External Network"
    - export TF_VAR_external_network_subnet_name="external-subnet"
    - export TF_VAR_external_ip_addresses="[\"10.2.255.1\"]"
    - export TF_VAR_ha_data_plane_network_name="BIG-IP Next HA Network"
    - export TF_VAR_ha_data_plane_network_subnet_name="ha-data-plane-subnet"
    - export TF_VAR_ha_data_plane_ip_addresses="[\"10.3.255.1\"]"
    - export TF_VAR_mbip_name_prefix="${CI_PROJECT_NAME}-${CI_PIPELINE_ID}"
    - export TF_VAR_mbip_image_name="latest"
    - export TF_VAR_mbip_release="0.7.0"
    - export TF_VAR_num_mbips=1
    - make test TEST_OUTPUT_FILE=${MBIQ_CI_TEST_OUTPUT_FILE}
  after_script:
    - terratest_log_parser -testlog ${MBIQ_CI_TEST_OUTPUT_FILE} -outputdir ${MBIQ_CI_TEST_OUTPUT_DIR}
  artifacts:
    when: always
    paths:
      - ${MBIQ_CI_TEST_OUTPUT_DIR}/*
    reports:
      junit: ${MBIQ_CI_TEST_OUTPUT_DIR}/report.xml

.release-job:
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - CHANGELOG.md

prep-release:
  extends: .release-job
  stage: pre-release
  script:
    - APPLICATION_VERSION=`head -1 CHANGELOG.md | sed -nr 's/.*(([0-9]+\.){2}[0-9]+).*$/\1/p'`
    - DESCRIPTION=`awk '/^$/{exit}; p; /^#/{p=1}' CHANGELOG.md`
    - echo "APPLICATION_VERSION=${APPLICATION_VERSION}" >> release.env
    - echo "DESCRIPTION=${DESCRIPTION}" >> release.env
  artifacts:
    reports:
      dotenv: release.env

release:
  extends: .release-job
  stage: release
  image: artifactory.f5net.com/f5-bigiq-docker/mbiq-tools/ci-releaser:${CI_RELEASER_VERSION}
  needs:
    - job: prep-release
      artifacts: true
  script:
    - echo "Creating ${APPLICATION_VERSION} Release"
  release:
    name: "${APPLICATION_VERSION}"
    description: "## Changes\n${DESCRIPTION}"
    tag_name: "v${APPLICATION_VERSION}"
